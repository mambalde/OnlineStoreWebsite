package com.OnlineStore.Entity;
// Generated 2020. 5. 25 ¿ÀÈÄ 6:24:37 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer", catalog = "onlinestoredb", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
@NamedQueries({
	@NamedQuery(name="Customer.findAll", query = "SELECT c FROM Customer c ORDER BY c.registeredDate DESC"),
	@NamedQuery(name = "Customer.countAll", query = "SELECT COUNT(c.email) FROM Customer c"),
	@NamedQuery(name="Customer.findByEmail", query="SELECT c FROM Customer c WHERE c.email= :email"),
	@NamedQuery(name = "Customer.checkLogin", query= "SELECT c FROM Customer c WHERE c.email= :email AND c.password= :password")
})
public class Customer implements java.io.Serializable {

	private Integer customerId;
	private String email;
	private String fullname;
	private String address;
	private String city;
	private String phone;
	private String zipcode;
	private String password;
	private Date registeredDate;
	private String country;
	private Set<Review> reviews = new HashSet<Review>(0);
	private Set<ProductOrder> productOrders = new HashSet<ProductOrder>(0);

	public Customer() {
	}

	public Customer(String email, String fullname, String address, String city, String phone, String zipcode,
			String password, Date registeredDate) {
		this.email = email;
		this.fullname = fullname;
		this.address = address;
		this.city = city;
		this.phone = phone;
		this.zipcode = zipcode;
		this.password = password;
		this.registeredDate = registeredDate;
	}

	public Customer(String email, String fullname, String address, String city, String phone, String zipcode,
			String password, Date registeredDate, String country, Set<Review> reviews,
			Set<ProductOrder> productOrders) {
		this.email = email;
		this.fullname = fullname;
		this.address = address;
		this.city = city;
		this.phone = phone;
		this.zipcode = zipcode;
		this.password = password;
		this.registeredDate = registeredDate;
		this.country = country;
		this.reviews = reviews;
		this.productOrders = productOrders;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "customer_id", unique = true, nullable = false)
	public Integer getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(Integer customerId) {
		this.customerId = customerId;
	}

	@Column(name = "email", unique = true, nullable = false, length = 64)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "fullname", nullable = false, length = 30)
	public String getFullname() {
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@Column(name = "address", nullable = false, length = 128)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "city", nullable = false, length = 32)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "phone", nullable = false, length = 15)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "zipcode", nullable = false, length = 24)
	public String getZipcode() {
		return this.zipcode;
	}

	public void setZipcode(String zipcode) {
		this.zipcode = zipcode;
	}

	@Column(name = "password", nullable = false, length = 16)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "registered_date", nullable = false, length = 19)
	public Date getRegisteredDate() {
		return this.registeredDate;
	}

	public void setRegisteredDate(Date registeredDate) {
		this.registeredDate = registeredDate;
	}

	@Column(name = "country", length = 64)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Review> getReviews() {
		return this.reviews;
	}

	public void setReviews(Set<Review> reviews) {
		this.reviews = reviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<ProductOrder> getProductOrders() {
		return this.productOrders;
	}

	public void setProductOrders(Set<ProductOrder> productOrders) {
		this.productOrders = productOrders;
	}

}
